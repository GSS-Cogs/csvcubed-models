name: Test csvcubed-models
on:
#added the missing workflow call(which should be working)
  workflow_call:

jobs:
  test_in_environments:
    runs-on: ubuntu-latest
    matrix:
      os: [ubuntu-latest]
      python-version: 3.11
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        id: install-python
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install poetry
        run: pip install poetry

      #Do we even need this step? wound't a poetry install do without it?
      - uses: actions/cache@v3
        # Include pandas version in cache key for Ubuntu/Python 3.11
        if: inputs.os == 'ubuntu-latest' && inputs.python-version == '3.11'
        with:
          path: |
            ~/.cache/pypoetry/virtualenvs
            C:\Users\runneradmin\AppData\Local\pypoetry\Cache\virtualenvs
          key: ${{ inputs.os }}-${{ steps.install-python.outputs.python-version }}-poetry-${{ hashFiles('poetry.lock') }}-${{ inputs.pandas-version }}

      - name: Install python packages
        run: poetry install --sync

      - name: Run pyright
        run: poetry run pyright . --lib

      - name: Run unittests
        run: poetry run pytest --junitxml=pytest_results.xml

        #this here is one of the issue due to the reference for pandas but
      - name: Archive unit & behave test results from xml files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-python${{ matrix.python-version }}-${{ inputs.pandas-version }} behave test results
          path: |
            pytest_results.xml
            reports/*.xml

  publish_test_results:
    needs: [test_in_environments]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.os }}-python${{ inputs.python-version }}-${{ inputs.pandas-version }} behave test results

      - name: Remove broken characters from xml test files
        # By removing broken characters from the xml unit/behave test files, we can then publish the tests results stored
        # in those files in a user friendly way on github actions using 'EnricoMi/publish-unit-test-result-action@v1'.
        if: always()
        run: sed -i -e "s/[\\x0A\\x1B]//g" reports/TESTS-*.xml

      #same issue here with the pandas but might just needs delete
      - name: Publish Unit & Behave Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          check_name: ${{ inputs.os }}-python${{ inputs.python-version }}-${{ inputs.pandas-version }} test results
          junit_files: |
            reports/*.xml
            pytest_results.xml
            