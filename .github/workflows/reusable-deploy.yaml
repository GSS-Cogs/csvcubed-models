<<<<<<< HEAD
name: Deploy csvcubed whl and documentation
=======
name: Deploy csvcubed-models whl
>>>>>>> origin/main
on:
  workflow_call:

jobs:
<<<<<<< HEAD
  publish_package_and_documentation:
=======
  publish_package:
>>>>>>> origin/main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
<<<<<<< HEAD
          name: package-and-documentation
=======
          name: package
>>>>>>> origin/main

      - name: Publish whl to test pypi
        if: github.ref_name == 'main'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish whl to pypi
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          
      - id: is-final-release 
        if: startsWith(github.ref, 'refs/tags/v') 
        run: | 
          [[ ! "${{github.ref_name}}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+$ ]]
        continue-on-error: true
<<<<<<< HEAD

      - name: Publish Docs
        if: steps.is-final-release.outcome == 'success' && startsWith(github.ref, 'refs/tags/v')
        run: |
          git config --global user.email "csvcubed@gsscogs.uk" && git config --global user.name "csvcubed"

          git clone 'https://csvcubed:${{ secrets.CSVCUBED_GIT_COMMIT_TOKEN }}@github.com/GSS-Cogs/csvcubed-docs.git' --depth 1 --branch gh-pages
          cd csvcubed-docs

          git rm -rf external --ignore-unmatch

          mkdir external

          cp -r ../external-docs/site/* external

          touch .nojekyll

          git add *
          git add .nojekyll

          git commit -m "Updating documentation."

          git push
=======
>>>>>>> origin/main
